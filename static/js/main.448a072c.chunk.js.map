{"version":3,"sources":["../../src/MapPicker.tsx","App.js","index.js"],"names":["apiKey","defaultLocation","onChange","loaded","React","marker","currentLocation","lat","Google","window","map","document","center","isValidLocation","Math","lng","zoom","clickedLocation","event","position","draggable","handleChangeLocation","src","script","Promise","resolve","loadScript","id","style","width","height","App","useState","setLat","setLng","type","value","disabled","ReactDOM","render","getElementById"],"mappings":"0RA0BA,I,EAA4B,SAAC,G,IAACA,WAAQC,oBAAiBC,aAC7CC,EAASC,YAAf,GACIC,EAASD,WAAb,MAEA,aACI,KAAY,CACR,IAAIE,EAAkBD,UAAtB,cACAH,EAASI,EAAD,MAAwBA,EAAhCJ,QAIR,aACI,IAhBiBK,EAAzB,EAgBcC,EAAUC,OAAhB,OAEMC,EAAM,IAAIF,OAAJ,IAAoBG,wBAApB,mBACR,CACIC,QApBSL,EAoBeN,EAAD,IApBvC,EAoB6DA,EAArCY,IAnBbC,iBAAuBA,aAA9B,IAmBoBD,EAA8E,CAAEN,IAAF,EAAUQ,IAAK,IACrGC,KAAM,IAGVR,oCAA4C,YACxC,IAAIS,EAAkBC,EAAtB,OACIb,EAAJ,QAQIA,0BAPAA,UAAiB,IAAIG,OAAJ,OAAuB,CACpCW,SADoC,EAEpCT,IAFoC,EAGpCU,WAAW,IAEfZ,yBAA8BH,EAA9BG,sBAKJa,OAgBb,OAZCjB,eAAgB,WACPD,EAAL,UA9DR,SAAoBmB,EAApB,GACI,IAAMC,EAASZ,uBAAf,UAMA,OALAY,2BACAA,uBACAA,QACCZ,8CAEM,IAAIa,SAAQ,YACfD,SAAgB,WACZE,QAsDAC,CACI,gEADM,EAAVA,uBAKAvB,gBAPRC,IAaE,6BACE,yBAAKuB,GAAG,kBAAkBC,MAAO,CAACC,MAAD,OAAgBC,OAAO,aCtDjDC,G,MAlBH,WAAO,IAAD,EACMC,mBAAS,IADf,mBACTzB,EADS,KACJ0B,EADI,OAEMD,mBAAS,IAFf,mBAETjB,EAFS,KAEJmB,EAFI,KAShB,OACE,oCACF,4CAAwB,2BAAOC,KAAK,OAAOC,MAAO7B,EAAK8B,UAAQ,IAC/D,6CAAyB,2BAAOF,KAAK,OAAOC,MAAOrB,EAAKsB,UAAQ,IAChE,kBAAC,EAAD,CAAWpC,gBAAiB,CAACM,IAAKA,EAAKQ,IAAKA,GAAMb,SATlD,SAA+BK,EAAKQ,GAClCkB,EAAO1B,GACP2B,EAAOnB,IAOyEf,OAAO,+CCZ3FsC,IAASC,OAAO,kBAAC,EAAD,MAAS5B,SAAS6B,eAAe,W","file":"static/js/main.448a072c.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\n\r\nfunction loadScript(src:string, id:string) {\r\n    const script = document.createElement('script');\r\n    script.setAttribute('async', '');\r\n    script.setAttribute('id', id);\r\n    script.src = src;\r\n    (document.querySelector('head') as any).appendChild(script);\r\n\r\n    return new Promise((resolve) => {\r\n        script.onload = () => {\r\n            resolve();\r\n        };\r\n    });\r\n  }\r\n\r\ntype Props = {\r\n    apiKey:string,\r\n    defaultLocation:{lat:number,lng:number};\r\n    onChange?(lat:number,lng:number):void;\r\n}\r\n\r\nfunction isValidLocation(lat:number, lng:number){\r\n    return Math.abs(lat) <= 90 && Math.abs(lng) <= 180;\r\n}\r\n\r\nconst MapPicker:FC<Props> = ({apiKey, defaultLocation, onChange}) => {\r\n    const loaded = React.useRef(false);\r\n    let marker = React.useRef<any>(null);\r\n\r\n    function handleChangeLocation(){\r\n        if(onChange){\r\n            var currentLocation = marker.current.getPosition();\r\n            onChange(currentLocation.lat(), currentLocation.lng());\r\n        }\r\n    }\r\n\r\n    function loadMap(){\r\n        const Google = (window as any).google;\r\n\r\n        const map = new Google.maps.Map(document.getElementById('google-map-view'), \r\n            { \r\n                center: isValidLocation(defaultLocation.lat, defaultLocation.lng) ? defaultLocation : { lat: 0, lng: 0},\r\n                zoom: 5 \r\n            });\r\n\r\n            Google.maps.event.addListener(map, 'click', function(event:any) {                \r\n                var clickedLocation = event.latLng;\r\n                if(!marker.current){\r\n                    marker.current = new Google.maps.Marker({\r\n                        position: clickedLocation,\r\n                        map: map,\r\n                        draggable: true\r\n                    });\r\n                    Google.maps.event.addListener(marker.current, 'dragend', handleChangeLocation);\r\n                } else {\r\n                    marker.current.setPosition(clickedLocation);\r\n                }\r\n\r\n                handleChangeLocation();\r\n            });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!loaded.current) {\r\n            loadScript(\r\n                'https://maps.googleapis.com/maps/api/js?libraries=places&key=' + apiKey,\r\n                'google-maps',\r\n              )\r\n              .then(loadMap);\r\n            loaded.current = true;\r\n        }\r\n\r\n    },[])  // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n   return (\r\n      <div>\r\n        <div id=\"google-map-view\" style={{width: '100%', height:'600px'}}></div>\r\n      </div>\r\n   );\r\n};\r\nexport default MapPicker;","import React, { useState } from 'react'\r\n\r\nimport MapPicker from 'react-google-map-picker'\r\nimport 'react-google-map-picker/dist/index.css'\r\n\r\nconst App = () => {\r\n  const [lat, setLat] = useState(10);\r\n  const [lng, setLng] = useState(20);\r\n\r\n  function handleChangeLocation (lat, lng){\r\n    setLat(lat);\r\n    setLng(lng);\r\n  }\r\n\r\n  return (\r\n    <>\r\n  <label>Latitute:</label><input type='text' value={lat} disabled/>\r\n  <label>Longitute:</label><input type='text' value={lng} disabled/>\r\n  <MapPicker defaultLocation={{lat: lat, lng: lng}} onChange={handleChangeLocation} apiKey='AIzaSyD07E1VvpsN_0FvsmKAj4nK9GnLq-9jtj8'/>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}